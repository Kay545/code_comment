# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3, [1024]],
   [-1, 1, SPPF, [1024, 5]],  # 9
  ]

    #第一层是一个卷积层，输出通道数为 64，卷积核大小为 6x6，步长为 2，填充为 2，输出特征图大小为输入的一半。              不管输入是几这里的输出都是输出的一半
    #第二层是一个卷积层，输出通道数为 128，卷积核大小为 3x3，步长为 2，输出特征图大小为输入的一半。
    #第三层是一个 C3 模块，包含 3 个卷积层，每个卷积层的输出通道数为 128，卷积核大小分别为 1x1、3x3、1x1，不改变特征图大小。
    #第四层是一个卷积层，输出通道数为 256，卷积核大小为 3x3，步长为 2，输出特征图大小为输入的一半。
    #第五层是一个 C3 模块，包含 6 个卷积层，每个卷积层的输出通道数为 256，卷积核大小分别为 1x1、3x3、1x1，不改变特征图大小
    #第六层是一个卷积层，输出通道数为 512，卷积核大小为 3x3，步长为 2，输出特征图大小为输入的一半。
    #第七层是一个 C3 模块，包含 9 个卷积层，每个卷积层的输出通道数为 512，卷积核大小分别为 1x1、3x3、1x1，不改变特征图大小。
    #第八层是一个卷积层，输出通道数为 1024，卷积核大小为 3x3，步长为 2，输出特征图大小为输入的一半。
    #第九层是一个 C3 模块，包含 3 个卷积层，每个卷积层的输出通道数为 1024，卷积核大小分别为 1x1、3x3、1x1，不改变特征图大小。
    #第十层是一个 SPPF 层，具有金字塔式空间池化（Spatial Pyramid Pooling），输出通道数为 1024，使用大小为 5x5 的金字塔空间池化。

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],  # [channels, kernel_size, stride]
   [-1, 1, nn.Upsample, [None, 2, 'nearest']], # 参数为 [None, scale_factor, 'nearest']，其中 scale_factor 是上采样的比例，'nearest' 表示最近邻插值。
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [512, False]],  # 13 C3 [channels, use_residual],C3全都不使用残差块

   [-1, 1, Conv, [256, 1, 1]],  # [channels, kernel_size, stride]
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)   C3 [channels, use_residual]

   [-1, 1, Conv, [256, 3, 2]], # [channels, kernel_size, stride]
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium) C3 [channels, use_residual]

   [-1, 1, Conv, [512, 3, 2]], # [channels, kernel_size, stride]
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large) C3 [channels, use_residual]

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5) 在17，20，23的输出上进行目标检测操作
  ]
